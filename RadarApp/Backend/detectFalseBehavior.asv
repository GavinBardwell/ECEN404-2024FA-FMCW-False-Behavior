function isFalse = detectFalseBehavior(simData)
    %{
    % sim data will be the data post fft. It will be in the form
    % simData.resp -- Resp is a MxP matrix. This is the response of the input signal from FFT
    %
    % simData.rng_grid -- rng_grid is the range samples at which range-doppler response is
    %     evaluated, grid column of length M
    %
    % simData.dop_grid -- dop_grid is the frequency samples that range dop is evaluated 
    %
    % The dataset for threshold calculation will be the first 5 frames from simData.resp
    %}
    %USER CODE GOES HERE

    % Extract the first 5 frames from simData.resp for threshold calculation
    dataset = simData.resp(1:5, :, :);

    % Calculate threshold using the threshold_calculation function
    threshold = threshold_calculation(dataset);

    % Calculate power vs range
    power_vs_range = sum(abs(simData.resp(::6)), 2); % Sum over the Doppler dimension
    peak = max(power_vs_range);
    mean_val = mean(power_vs_range);  % 'mean' is a MATLAB function, so using 'mean_val' to avoid conflict
    peak_to_average = peak / mean_val;
    
    % Calculate if within range
    peak_average_threshold = threshold;
    p_a = peak_to_average > peak_average_threshold;
    p_a_l = peak_to_average < (peak_average_threshold - 0.49);
    
    % Using threshold return true or false
    if p_a || p_a_l
        result = true;
    else
        result = false;
    end
    isFalse = result;
    %%USER CODE GOES HERE
end

function threshold = threshold_calculation(dataset)
    % Dimension of dataset is (5, M, P), calculate average peak-to-average ratio over first 5 frames
    peak_to_average_array = zeros(640, 1);
    for i = 1:640
        peak_to_average_array(i) = max(dataset(1, i, :)) / mean(dataset(1, i, :));
    end
    
    threshold = mean(peak_to_average_array) + 0.09;
end
